buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.6.0'
    }
}

plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
    id 'de.marcphilipp.nexus-publish' version '0.2.0'
}

jacoco {
    toolVersion = "0.8.2"
}

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'info.solidsoft.pitest'

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

group = 'com.github.leeonky'
version = '0.3.1' + System.env.VERSION_SCOPE
sourceCompatibility = 1.8

jacocoTestReport {
    reports {
        xml.enabled = true // for coveralls
        html.enabled = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.github.leeonky:bean-util:0.4.2'
    compile 'com.github.leeonky:interpreter-core:0.0.2'

    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
    testImplementation 'org.assertj:assertj-core:3.21.0'
//    TODO remove
    testImplementation 'org.skyscreamer:jsonassert:1.5.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.3.1")
    testImplementation "io.cucumber:cucumber-java:6.10.4"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testAnnotationProcessor('org.projectlombok:lombok:1.18.4')
    testCompile('org.projectlombok:lombok:1.18.4')
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '4.0.0'

    pitest 'io.github.wmaarts:pitest-mutation-testing-elements-plugin:0.3.1'
}

test {
    test {
        systemProperty("cucumber.publish.quiet", true)
        useJUnitPlatform {
            excludeTags("disabled")
        }
    }
}

pitest {
    targetClasses = ['com.github.leeonky.dal.*']
    excludedClasses = ['com.github.leeonky.dal.spec.*', 'com.github.leeonky.dal.runtime.Schema']
    outputFormats = ['HTML2']
    pitestVersion = '1.6.9'
    threads = 8
    junit5PluginVersion = "0.12"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = project.name
                description = project.name
                url = 'https://github.com/leeonky/' + project.name

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'leeonky'
                        name = 'Liangchen'
                        email = 'leeonky@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/leeonky/' + project.name + '.git'
                    developerConnection = 'scm:git:git@github.com:leeonky' + project.name + '.git'
                    url = 'https://github.com/leeonky/' + project.name + '.git'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusPublishing {
    username = System.env.ossrhUsername
    password = System.env.ossrhPassword
}

task currentVersion {
    doLast {
        println project.version
    }
}

tasks.coveralls {
    dependsOn jacocoTestReport
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            environment('CUCUMBER_PUBLISH_QUIET', true)
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'com.github.leeonky.dal.cucumber', 'src/test/resources/features']
        }
    }

    build {
        dependsOn cucumber
    }
}
